name: Build and Publish Multi-Arch Docker Images

on:
  workflow_dispatch: # Ручной запуск

jobs:
  check-and-build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write # Для GHCR

    steps:
      # 1. Установка jq для парсинга JSON
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # 2. Получаем последний стабильный тег из MetaCubeX/mihomo
      - name: Get latest stable mihomo tag
        id: mihomo_tag
        run: |
          # Фильтруем только стабильные теги (vX.Y.Z, без -rc, -alpha, -beta)
          MIHOMO_TAG=$(curl -s https://api.github.com/repos/MetaCubeX/mihomo/releases | \
            jq -r '[.[] | select(.prerelease == false and .draft == false and (.tag_name | test("^v[0-9]+\\.[0-9]+\\.[0-9]+$")))][0].tag_name')
          if [ -z "$MIHOMO_TAG" ]; then
            echo "No stable tag found in MetaCubeX/mihomo"
            exit 1
          fi
          echo "Latest stable mihomo tag: $MIHOMO_TAG"
          echo "VERSION=$MIHOMO_TAG" >> $GITHUB_ENV

      # 3. Устанавливаем Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Логинимся в GHCR
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5. Логинимся в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Устанавливаем переменные
      - name: Set variables
        id: vars
        run: |
          echo "BUILDTIME=$(date)" >> $GITHUB_ENV

      # 7. Сборка и пуш AMD64_v1
      - name: Build and push mihomo AMD64_v1
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./dockerfile
          platforms: linux/amd64
          push: true
          build-args: |
            TAG=${{ env.VERSION }}
            BUILDTIME=${{ env.BUILDTIME }}
            AMD64VERSION=v1
          tags: |
            ghcr.io/medium1992/mihomo-fakeip-ros:${{ env.VERSION }}-amd64_v1
            medium1992/mihomo-fakeip-ros:${{ env.VERSION }}-amd64_v1

      # 8. Сборка и пуш AMD64_v2
      - name: Build and push mihomo AMD64_v2
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./dockerfile
          platforms: linux/amd64
          push: true
          build-args: |
            TAG=${{ env.VERSION }}
            BUILDTIME=${{ env.BUILDTIME }}
            AMD64VERSION=v2
          tags: |
            ghcr.io/medium1992/mihomo-fakeip-ros:${{ env.VERSION }}-amd64_v2
            medium1992/mihomo-fakeip-ros:${{ env.VERSION }}-amd64_v2

      # 9. Сборка и пуш multi-arch (AMD64_v3) + latest
      - name: Build and push mihomo multi-arch
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          build-args: |
            TAG=${{ env.VERSION }}
            BUILDTIME=${{ env.BUILDTIME }}
            AMD64VERSION=v3
          tags: |
            ghcr.io/medium1992/mihomo-fakeip-ros:latest
            ghcr.io/medium1992/mihomo-fakeip-ros:${{ env.VERSION }}
            medium1992/mihomo-fakeip-ros:latest
            medium1992/mihomo-fakeip-ros:${{ env.VERSION }}
